# Install required packages
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
    python3 \
    python3-pip \
    git \
    sudo \
    wget \
    cmake \
    binutils \
    libunwind-dev \
    zlib1g-dev \
    libsnappy-dev \
    liblz4-dev \
    g++ \
    g++-multilib \
    doxygen \
    libconfig++-dev \
    vim

RUN pip install matplotlib

# Authorize SSH Host
RUN mkdir -p /root/.ssh && \
    chmod 700 /root/.ssh


# Copy workflow simpoint/no_simpoint script
COPY utilities.sh /usr/local/bin/utilities.sh
COPY run_clustering.sh /usr/local/bin/run_clustering.sh
COPY run_trace_post_processing.sh /usr/local/bin/run_trace_post_processing.sh

COPY run_simpoint_trace.sh /usr/local/bin/run_simpoint_trace.sh
COPY run_scarab.sh /usr/local/bin/run_scarab.sh
COPY run_scarab_allbench.sh /usr/local/bin/run_scarab_allbench.sh
COPY gather_fp_pieces.py /usr/local/bin/gather_fp_pieces.py
COPY run_exp_using_descriptor.py /usr/local/bin/run_exp_using_descriptor.py

COPY run_scarab_mode_4.sh /usr/local/bin/run_scarab_mode_4.sh
COPY run_scarab_mode_4_allbench.sh /usr/local/bin/run_scarab_mode_4_allbench.sh
COPY gather_cluster_results.py /usr/local/bin/gather_cluster_results.py
COPY ./common/common_entrypoint.sh /usr/local/bin/common_entrypoint.sh

RUN mkdir -p /simpoint_traces

# Set the working directory
ENV tmpdir="/tmp_home"
RUN mkdir -p $tmpdir && chmod -R 755 $tmpdir
WORKDIR $tmpdir

# DynamoRIO package
RUN cd $tmpdir && wget https://github.com/DynamoRIO/dynamorio/releases/download/release_10.0.0/DynamoRIO-Linux-10.0.0.tar.gz && tar -xzvf DynamoRIO-Linux-10.0.0.tar.gz
ENV DYNAMORIO_HOME=$tmpdir/DynamoRIO-Linux-10.0.0/

# Build fingerprint client
COPY fingerprint_src $tmpdir/fingerprint_src/
RUN mkdir $tmpdir/fingerprint_src/build && \
    cd $tmpdir/fingerprint_src/build && \
    cmake -DDynamoRIO_DIR=$DYNAMORIO_HOME/cmake .. && \
    make && \
    cp ./libfpg.so $tmpdir/libfpg.so

# Install Scarab dependencies
RUN cd $tmpdir && wget -nc https://software.intel.com/sites/landingpage/pintool/downloads/pin-3.15-98253-gb56e429b1-gcc-linux.tar.gz && tar -xzvf pin-3.15-98253-gb56e429b1-gcc-linux.tar.gz

# Env to build Scarab
ENV PIN_ROOT $tmpdir/pin-3.15-98253-gb56e429b1-gcc-linux
ENV SCARAB_ENABLE_PT_MEMTRACE 1
ENV LD_LIBRARY_PATH $tmpdir/pin-3.15-98253-gb56e429b1-gcc-linux/extras/xed-intel64/lib
ENV LD_LIBRARY_PATH $tmpdir/pin-3.15-98253-gb56e429b1-gcc-linux/intel64/runtime/pincrt:$LD_LIBRARY_PATH

# Build SimPoint 3.2
# Reference:
# https://github.com/intel/pinplay-tools/blob/main/pinplay-scripts/PinPointsHome/Linux/bin/Makefile
RUN cd $tmpdir/ && \
    wget -O - http://cseweb.ucsd.edu/~calder/simpoint/releases/SimPoint.3.2.tar.gz | tar -x -f - -z && \
    wget https://raw.githubusercontent.com/intel/pinplay-tools/main/pinplay-scripts/PinPointsHome/Linux/bin/simpoint_modern_gcc.patch -P SimPoint.3.2/ && \
    patch --directory=SimPoint.3.2 --strip=1 < SimPoint.3.2/simpoint_modern_gcc.patch && \
    make -C SimPoint.3.2 && \
    ln -s SimPoint.3.2/bin/simpoint ./simpoint

ENV DOCKER_BUILDKIT 1
ENV COMPOSE_DOCKER_CLI_BUILD 1
